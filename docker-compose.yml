version: "3.7"

services:
  vote:
    build: ./vote
    command: python app.py
    volumes:
     - vote-code:/app
    networks:
      - front-tier
      - back-tier

  result:
    build: ./result
    command: nodemon server.js
    volumes:
      - result-code:/app
    networks:
      - front-tier
      - back-tier

  worker:
    build:
      context: ./worker
    depends_on:
      - "redis"
      - "db"
    networks:
      - back-tier

  redis:
    image: redis:alpine
    container_name: redis
    ports: ["6379"]
    networks:
      - back-tier

  db:
    image: postgres:9.4
    container_name: db
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
    volumes:
      - "db-data:/var/lib/postgresql/data"
    networks:
      - back-tier

volumes:
  db-data:
  vote-code:
  result-code:

networks:
  front-tier:
  back-tier:

x-mutagen:
  sync:
    defaults:
      ignore:
        vcs: true
    vote:
      alpha: "./vote"
      beta: "volume://vote-code"
      mode: "one-way-safe"
    result:
      alpha: "./result"
      beta: "volume://result-code"
      mode: "one-way-safe"
      configurationBeta:
        permissions:
          defaultOwner: "id:1000"
          defaultGroup: "id:1000"
  forward:
    vote:
      source: "tcp::5000"
      destination: "network://front-tier:tcp:vote:80"
    result:
      source: "tcp::5001"
      destination: "network://front-tier:tcp:result:80"
